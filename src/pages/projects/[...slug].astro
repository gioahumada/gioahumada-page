---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const projects = await getCollection('projects');
  return projects.map(project => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

const { project } = Astro.props;
const { Content } = await project.render();

// Formatear la fecha
const formattedDate = new Date(project.data.date).toLocaleDateString('es-ES', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
---

<Layout title={project.data.title}>
  <article class="project-detail">
    <header class="project-header">
      <div class="project-meta">
        <h1>{project.data.title}</h1>
        <time datetime={project.data.date.toISOString()}>{formattedDate}</time>
        <div class="tags">
          {project.data.tags.map((tag: string) => (
            <span class="tag">{tag}</span>
          ))}
        </div>
      </div>
      
      <div class="media-container">
        {project.data.media.type === 'video' ? (
          <video 
            controls
            poster={project.data.media.thumbnail}
            preload="auto"
          >
            <source src={project.data.media.url} type="video/mp4" />
          </video>
        ) : (
          <img 
            src={project.data.media.url} 
            alt={project.data.title}
            loading="eager"
          />
        )}
      </div>
    </header>

    <div class="project-description">
      <p class="description-text">{project.data.description}</p>
    </div>

    <div class="content">
      <Content />
    </div>

    {project.data.link && (
      <div class="project-link">
        <a href={project.data.link} target="_blank" rel="noopener noreferrer">
          Ver proyecto â†’
        </a>
      </div>
    )}
  </article>
</Layout>

<style>
.project-detail {
  max-width: 800px;
  margin: 0 auto;
  padding: 2rem 1rem;
}

.project-header {
  margin-bottom: 2rem;
}

.project-meta {
  margin-bottom: 1.5rem;
  text-align: center;
}

.project-meta h1 {
  font-size: var(--text-lg);
  font-weight: 500;
  margin-bottom: 0.5rem;
  line-height: 1.2;
  letter-spacing: -0.01em;
}

time {
  font-size: var(--text-xs);
  color: var(--primary-color);
  opacity: 0.8;
}

.tags {
  display: flex;
  gap: 0.5rem;
  justify-content: center;
  margin: 0.75rem 0;
  flex-wrap: wrap;
}

.tag {
  font-size: var(--text-xs);
  padding: 0.25rem 0.75rem;
  background: #f0f0f0;
  border-radius: 1rem;
  color: var(--primary-color);
  opacity: 0.8;
}

.media-container {
  margin: 2rem auto;
  border-radius: 0.5rem;
  overflow: hidden;
  box-shadow: 0 4px 20px rgba(0,0,0,0.1);
  max-width: 600px;
  aspect-ratio: 16/9;
}

.media-container img,
.media-container video {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

.project-description {
  margin: 2rem auto;
  padding: 1.5rem;
  background: #f8f8f8;
  border-radius: 0.5rem;
  max-width: 600px;
}

.description-text {
  font-size: var(--text-base);
  line-height: 1.6;
  color: var(--primary-color);
}

.content {
  font-size: var(--text-base);
  line-height: 1.7;
  color: var(--primary-color);
  max-width: 600px;
  margin: 0 auto;
}

/* Estilos para el contenido Markdown */
.content :global(h2) {
  font-size: var(--text-lg);
  font-weight: 500;
  margin: 2rem 0 1rem;
  letter-spacing: -0.01em;
}

.content :global(h3) {
  font-size: var(--text-base);
  font-weight: 500;
  margin: 1.5rem 0 1rem;
  letter-spacing: -0.01em;
}

.content :global(p) {
  margin: 1rem 0;
  font-size: var(--text-base);
}

.content :global(ul),
.content :global(ol) {
  margin: 1rem 0;
  padding-left: 1.5rem;
  font-size: var(--text-base);
}

.content :global(li) {
  margin: 0.5rem 0;
}

.content :global(a) {
  color: var(--accent-color);
  text-decoration: none;
  border-bottom: 1px solid transparent;
  transition: border-color 0.3s ease;
}

.content :global(a:hover) {
  border-bottom-color: var(--accent-color);
}

.content :global(blockquote) {
  margin: 1.5rem 0;
  padding: 1rem 1.5rem;
  border-left: 4px solid var(--accent-color);
  background: #f8f8f8;
  font-style: italic;
  font-size: var(--text-base);
}

.content :global(code) {
  background: #f4f4f4;
  padding: 0.2rem 0.4rem;
  border-radius: 0.25rem;
  font-size: var(--text-sm);
}

.content :global(pre) {
  background: #f4f4f4;
  padding: 1rem;
  border-radius: 0.5rem;
  overflow-x: auto;
  margin: 1.5rem 0;
  font-size: var(--text-sm);
}

.content :global(img) {
  max-width: 100%;
  height: auto;
  border-radius: 0.5rem;
  margin: 1.5rem auto;
  display: block;
}

.project-link {
  margin-top: 2rem;
  text-align: center;
}

.project-link a {
  display: inline-block;
  padding: 0.75rem 1.5rem;
  background: var(--accent-color);
  color: white;
  text-decoration: none;
  border-radius: 0.5rem;
  transition: background-color 0.3s ease;
  font-size: var(--text-sm);
}

.project-link a:hover {
  opacity: 0.9;
}

/* Responsive */
@media (max-width: 768px) {
  .project-detail {
    padding: 1rem;
  }

  .media-container,
  .project-description,
  .content {
    max-width: 100%;
  }
}
</style> 