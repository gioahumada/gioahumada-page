---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const documents = await getCollection('documents');
  return documents.map(document => ({
    params: { slug: document.slug },
    props: { document },
  }));
}

const { document } = Astro.props;
const { Content } = await document.render();

// Formatear la fecha
const formattedDate = new Date(document.data.date).toLocaleDateString('es-ES', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
---

<Layout title={document.data.title}>
  <article class="document-detail">
    <header class="document-header">
      <div class="document-meta">
        <h1>{document.data.title}</h1>
        <time datetime={document.data.date.toISOString()}>{formattedDate}</time>
        <div class="tags">
          {document.data.tags.map((tag: string) => (
            <span class="tag">{tag}</span>
          ))}
        </div>
      </div>
      <!-- {document.data.image && (
        <img src={document.data.image} alt={document.data.title} class="document-image" />
      )} -->
    </header>

    <!-- <div class="document-description">
      <p class="description-text">{document.data.description}</p>
    </div> -->

    <div class="content">
      <Content />
    </div>
  </article>
</Layout>

<style>
.document-detail {
  max-width: 800px;
  margin: 0 auto;
  padding: 2rem 1rem;
}

.document-header {
  margin-bottom: 2rem;
}

.document-meta {
  margin-bottom: 1.5rem;
  text-align: center;
}

.document-meta h1 {
  font-size: var(--text-lg);
  font-weight: 500;
  margin-bottom: 0.5rem;
  line-height: 1.2;
  letter-spacing: -0.01em;
}

time {
  font-size: var(--text-xs);
  color: var(--primary-color);
  opacity: 0.8;
}

.tags {
  display: flex;
  gap: 0.5rem;
  justify-content: center;
  margin: 0.75rem 0;
  flex-wrap: wrap;
}

.tag {
  font-size: var(--text-xs);
  padding: 0.25rem 0.75rem;
  background: #f0f0f0;
  border-radius: 1rem;
  color: var(--primary-color);
  opacity: 0.8;
}

.document-image {
  width: 100%;
  height: auto;
  display: block;
  margin: 0 auto 2rem;
}

.document-description {
  margin: 2rem auto;
  padding: 1.5rem;
  background: #f8f8f8;
  border-radius: 0.5rem;
  max-width: 600px;
}

.description-text {
  font-size: var(--text-base);
  line-height: 1.6;
  color: var(--primary-color);
}

.content {
  font-size: var(--text-base);
  line-height: 1.7;
  color: var(--primary-color);
  max-width: 600px;
  margin: 0 auto;
}

/* Estilos para el contenido Markdown */
.content :global(h2) {
  font-size: var(--text-lg);
  font-weight: 500;
  margin: 2rem 0 1rem;
  letter-spacing: -0.01em;
}

.content :global(h3) {
  font-size: var(--text-base);
  font-weight: 500;
  margin: 1.5rem 0 1rem;
  letter-spacing: -0.01em;
}

.content :global(p) {
  margin: 1rem 0;
  font-size: var(--text-base);
}

.content :global(ul),
.content :global(ol) {
  margin: 1rem 0;
  padding-left: 1.5rem;
  font-size: var(--text-base);
}

.content :global(li) {
  margin: 0.5rem 0;
}

.content :global(a) {
  color: var(--accent-color);
  text-decoration: none;
  border-bottom: 1px solid transparent;
  transition: border-color 0.3s ease;
}

.content :global(a:hover) {
  border-bottom-color: var(--accent-color);
}

.content :global(blockquote) {
  margin: 1.5rem 0;
  padding: 1rem 1.5rem;
  border-left: 4px solid var(--accent-color);
  background: #f8f8f8;
  font-style: italic;
  font-size: var(--text-base);
}

.content :global(code) {
padding: 0.2rem 0.4rem;
  border-radius: 0.25rem;
  font-size: var(--text-sm);
}

.content :global(pre) {
  background: #f4f4f4;
  padding: 1rem;
  border-radius: 0.5rem;
  overflow-x: auto;
  margin: 1.5rem 0;
  font-size: var(--text-sm);
}

.content :global(img) {
  max-width: 100%;
  height: auto;
  border-radius: 0.5rem;
  margin: 1.5rem auto;
  display: block;
}

.content[data-astro-cid-4hvc765s] code {
    background-color: navajowhite;
}


</style>