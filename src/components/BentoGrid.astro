---
import { getCollection } from 'astro:content';
const featuredProjects = await getCollection('projects', ({ data }) => {
  return data.featured === true;
});

// Duplicar los proyectos para tener suficiente contenido
const duplicatedProjects = [
  ...featuredProjects, 
  ...featuredProjects, 
  ...featuredProjects
];

// Separar los proyectos en dos filas
const topRow = duplicatedProjects.filter((_, i) => i % 2 === 0);
const bottomRow = duplicatedProjects.filter((_, i) => i % 2 === 1);
---

<section class="bento-container">
  <div class="scroll-container">
    <div class="row-wrapper top-row">
      <div class="scroll-content" id="topRow">
        {topRow.map((project) => (
          <a href={`/projects/${project.slug}`} class="bento-item">
            <div class="bento-media">
              {project.data.media.type === 'video' ? (
                <>
                  <img 
                    src={project.data.media.thumbnail} 
                    alt={project.data.title} 
                    class="thumbnail"
                    loading="lazy"
                  />
                  <video 
                    class="video-player"
                    poster={project.data.media.thumbnail}
                    muted
                    loop
                    playsinline
                    preload="none"
                  >
                    <source src={project.data.media.url} type="video/mp4" />
                  </video>
                </>
              ) : (
                <img 
                  src={project.data.media.url} 
                  alt={project.data.title}
                  loading="lazy" 
                />
              )}
            </div>
          </a>
        ))}
      </div>
    </div>
    
    <div class="row-wrapper bottom-row">
      <div class="scroll-content" id="bottomRow">
        {bottomRow.map((project) => (
          <a href={`/projects/${project.slug}`} class="bento-item">
            <div class="bento-media">
              {project.data.media.type === 'video' ? (
                <>
                  <img 
                    src={project.data.media.thumbnail} 
                    alt={project.data.title} 
                    class="thumbnail"
                    loading="lazy"
                  />
                  <video 
                    class="video-player"
                    poster={project.data.media.thumbnail}
                    muted
                    loop
                    playsinline
                    preload="none"
                  >
                    <source src={project.data.media.url} type="video/mp4" />
                  </video>
                </>
              ) : (
                <img 
                  src={project.data.media.url} 
                  alt={project.data.title}
                  loading="lazy" 
                />
              )}
            </div>
          </a>
        ))}
      </div>
    </div>
  </div>
</section>

<style>
.bento-container {
  width: 100%;
  overflow: hidden;
  margin: 2rem 0;
  height: 300px;
}

.scroll-container {
  width: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.row-wrapper {
  display: flex;
  gap: 0.75rem;
}

.scroll-content {
  display: flex;
  gap: 0.75rem;
  animation: scroll 30s linear infinite;
  will-change: transform;
}

@keyframes scroll {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-33.33%);
  }
}

/* Pausar la animación cuando el usuario hace hover */
.scroll-content:hover {
  animation-play-state: paused;
}

/* Ajustado el desplazamiento de la segunda fila */
.bottom-row {
  margin-left: 100px;
  padding-right: 100px;
}

.bento-item {
  flex: 0 0 250px;
  height: 140px;
  border-radius: 0.75rem;
  overflow: hidden;
  cursor: pointer;
  transition: transform 0.3s ease;
}

.bento-item:hover {
  transform: scale(1.02);
}

.bento-media {
  position: relative;
  width: 100%;
  height: 100%;
}

.bento-media img,
.bento-media video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.video-player {
  opacity: 0;
  transition: opacity 0.3s ease;
}

.thumbnail {
  opacity: 1;
  transition: opacity 0.3s ease;
}

.bento-item:hover .video-player {
  opacity: 1;
}

.bento-item:hover .thumbnail {
  opacity: 0;
}

/* Responsive */
@media (max-width: 768px) {
  .bento-container {
    height: 240px;
  }

  .bento-item {
    flex: 0 0 200px;
    height: 110px;
  }

  .bottom-row {
    margin-left: 50px;
    padding-right: 50px;
  }
}
</style>

<script>
function duplicateContent() {
  const topRow = document.getElementById('topRow');
  const bottomRow = document.getElementById('bottomRow');
  
  if (topRow && bottomRow) {
    // Duplicar el contenido varias veces para asegurar una transición suave
    const topContent = topRow.innerHTML;
    const bottomContent = bottomRow.innerHTML;
    
    // Duplicar 3 veces para asegurar suficiente contenido
    topRow.innerHTML = topContent + topContent + topContent;
    bottomRow.innerHTML = bottomContent + bottomContent + bottomContent;
  }
}

// Reiniciar la animación cuando termine
function handleAnimation() {
  const contents = document.querySelectorAll('.scroll-content');
  contents.forEach(content => {
    content.addEventListener('animationend', () => {
      content.style.animation = 'none';
      content.offsetHeight; // Trigger reflow
      content.style.animation = null;
    });
  });
}

document.addEventListener('DOMContentLoaded', () => {
  duplicateContent();
  handleAnimation();
});

// Manejo optimizado de videos
document.querySelectorAll('.bento-item').forEach(item => {
  const video = item.querySelector('video');
  
  if (video) {
    let playTimeout;
    
    item.addEventListener('mouseenter', () => {
      clearTimeout(playTimeout);
      playTimeout = setTimeout(() => {
        const playPromise = video.play();
        if (playPromise !== undefined) {
          playPromise.catch(() => {});
        }
      }, 100);
    });

    item.addEventListener('mouseleave', () => {
      clearTimeout(playTimeout);
      video.pause();
      video.currentTime = 0;
    });
  }
});
</script> 
</script> 